{"version":3,"sources":["webpack://[name]/./src/core/components/parameters/parameters.jsx"],"names":["eachMap","iterable","fn","valueSeq","filter","Im","Map","isMap","map","Parameters","props","param","value","isXml","changeParamByIdentity","specActions","onChangeKey","val","changeConsumesValue","tab","setState","parametersVisible","callbackVisible","state","onTryoutClick","onCancelClick","parameters","allowTryItOut","tryItOutEnabled","specPath","getComponent","getConfigs","specSelectors","pathMethod","oas3Actions","oas3Selectors","operation","authSelectors","ParameterRow","TryItOutButton","ContentType","Callbacks","RequestBody","isExecute","isOAS3","_requestBody","get","toJS","content","contentType","mediaTypeValue","schemaForMediaType","schema","examplesForMediaType","examples","exampleName","mediaTypeExampleValue","updatedValue","parseExample","authorizedValues","requestBody","fromJS","toggleTab","count","parameter","i","push","toString","parameterWithMetaByIdentity","onChange","onChangeConsumesWrapper","toArray","slice","requestContentType","List","keySeq","setRequestContentType","requestBodyValue","setRequestBodyValue","initRequestBodyValidateError","requestBodyInclusionSetting","requestBodyErrors","activeExamplesMember","key","setActiveExamplesMember","name","contextType","contextName","path","lastValue","usableValue","setIn","setRequestBodyInclusion","Component","Function","prototype"],"mappings":"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","file":"swagger-ui-bundle.31b84be45e1da4f36117.hot-update.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Im, { Map, List, fromJS } from \"immutable\"\r\nimport ImPropTypes from \"react-immutable-proptypes\"\r\nimport { stringify, isJSONObject, parseExample } from \"core/utils\"\r\n\r\n// More readable, just iterate over maps, only\r\nconst eachMap = (iterable, fn) => iterable.valueSeq().filter(Im.Map.isMap).map(fn)\r\n\r\nexport default class Parameters extends Component {\r\n\r\n  constructor(props) {\r\n   super(props)\r\n   this.state = {\r\n     callbackVisible: false,\r\n     parametersVisible: true\r\n   }\r\n }\r\n\r\n  static propTypes = {\r\n    parameters: ImPropTypes.list.isRequired,\r\n    operation: PropTypes.object.isRequired,\r\n    specActions: PropTypes.object.isRequired,\r\n    getComponent: PropTypes.func.isRequired,\r\n    specSelectors: PropTypes.object.isRequired,\r\n    oas3Actions: PropTypes.object.isRequired,\r\n    oas3Selectors: PropTypes.object.isRequired,\r\n    fn: PropTypes.object.isRequired,\r\n    tryItOutEnabled: PropTypes.bool,\r\n    allowTryItOut: PropTypes.bool,\r\n    onTryoutClick: PropTypes.func,\r\n    onCancelClick: PropTypes.func,\r\n    onChangeKey: PropTypes.array,\r\n    pathMethod: PropTypes.array.isRequired,\r\n    getConfigs: PropTypes.func.isRequired,\r\n    specPath: ImPropTypes.list.isRequired,\r\n  }\r\n\r\n\r\n  static defaultProps = {\r\n    onTryoutClick: Function.prototype,\r\n    onCancelClick: Function.prototype,\r\n    tryItOutEnabled: false,\r\n    allowTryItOut: true,\r\n    onChangeKey: [],\r\n    specPath: [],\r\n  }\r\n\r\n  onChange = ( param, value, isXml ) => {\r\n    let {\r\n      specActions: { changeParamByIdentity },\r\n      onChangeKey,\r\n    } = this.props\r\n\r\n    changeParamByIdentity(onChangeKey, param, value, isXml)\r\n  }\r\n\r\n  onChangeConsumesWrapper = ( val ) => {\r\n    let {\r\n      specActions: { changeConsumesValue },\r\n      onChangeKey\r\n    } = this.props\r\n\r\n    changeConsumesValue(onChangeKey, val)\r\n  }\r\n\r\n  toggleTab = (tab) => {\r\n    if(tab === \"parameters\"){\r\n      return this.setState({\r\n        parametersVisible: true,\r\n        callbackVisible: false\r\n      })\r\n    }else if(tab === \"callbacks\"){\r\n      return this.setState({\r\n        callbackVisible: true,\r\n        parametersVisible: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    let {\r\n      onTryoutClick,\r\n      onCancelClick,\r\n      parameters,\r\n      allowTryItOut,\r\n      tryItOutEnabled,\r\n      specPath,\r\n\r\n      fn,\r\n      getComponent,\r\n      getConfigs,\r\n      specSelectors,\r\n      specActions,\r\n      pathMethod,\r\n      oas3Actions,\r\n      oas3Selectors,\r\n      operation,\r\n      authSelectors\r\n    } = this.props\r\n\r\n    const ParameterRow = getComponent(\"parameterRow\")\r\n    const TryItOutButton = getComponent(\"TryItOutButton\")\r\n    const ContentType = getComponent(\"contentType\")\r\n    const Callbacks = getComponent(\"Callbacks\", true)\r\n    const RequestBody = getComponent(\"RequestBody\", true)\r\n\r\n    const isExecute = tryItOutEnabled && allowTryItOut\r\n    const isOAS3 = specSelectors.isOAS3()\r\n    // let authorized = authSelectors.authorized();\r\n    // let authorizedValues = authorized.toJS()\r\n    // Rewrite JSON examples\r\n    var _requestBody = operation.get(\"requestBody\");\r\n    if (_requestBody) {\r\n        _requestBody = _requestBody.toJS()\r\n        if (_requestBody.content) {\r\n          for (var contentType in _requestBody.content) {\r\n            var mediaTypeValue = _requestBody.content[contentType];\r\n            var schemaForMediaType = mediaTypeValue.schema;\r\n            var examplesForMediaType = mediaTypeValue.examples\r\n            if (schemaForMediaType && examplesForMediaType) {\r\n              for (var exampleName in examplesForMediaType) {\r\n                var mediaTypeExampleValue = examplesForMediaType[exampleName].value;\r\n                if (mediaTypeExampleValue) {\r\n                  var updatedValue = parseExample(schemaForMediaType, mediaTypeExampleValue, contentType, authorizedValues);\r\n                  _requestBody.content[contentType].examples[exampleName].value = updatedValue;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n    }\r\n    \r\n    const requestBody = fromJS(_requestBody);\r\n    \r\n    return (\r\n      <div className=\"opblock-section\">\r\n        <div className=\"opblock-section-header\">\r\n          { isOAS3 ? (\r\n          <div className=\"tab-header\">\r\n              <div onClick={() => this.toggleTab(\"parameters\")} className={`tab-item ${this.state.parametersVisible && \"active\"}`}>\r\n                <h4 className=\"opblock-title\"><span>Parameters</span></h4>\r\n              </div>\r\n              { operation.get(\"callbacks\") ?\r\n                (\r\n                  <div onClick={() => this.toggleTab(\"callbacks\")} className={`tab-item ${this.state.callbackVisible && \"active\"}`}>\r\n                    <h4 className=\"opblock-title\"><span>Callbacks</span></h4>\r\n                  </div>\r\n                ) : null\r\n              }\r\n            </div>\r\n          ) : (\r\n            <div className=\"tab-header\">\r\n            <h4 className=\"opblock-title\">Parameters</h4>\r\n          </div>\r\n          )}\r\n            { allowTryItOut ? (\r\n              <TryItOutButton enabled={ tryItOutEnabled } onCancelClick={ onCancelClick } onTryoutClick={ onTryoutClick } />\r\n            ) : null }\r\n        </div>\r\n        {this.state.parametersVisible ? <div className=\"parameters-container\">\r\n        { !parameters.count() ? <div className=\"opblock-description-wrapper\"><p>No parameters</p></div> :\r\n          <div className=\"table-container\">\r\n            <table className=\"parameters\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"col_header parameters-col_name\">Name</th>\r\n                  <th className=\"col_header parameters-col_description\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  eachMap(parameters, (parameter, i) => (\r\n                    <ParameterRow\r\n                      fn={ fn }\r\n                      specPath={specPath.push(i.toString())}\r\n                      getComponent={ getComponent }\r\n                      getConfigs={ getConfigs }\r\n                      rawParam={ parameter }\r\n                      param={ specSelectors.parameterWithMetaByIdentity(pathMethod, parameter) }\r\n                      key={ `${parameter.get( \"in\" )}.${parameter.get(\"name\")}` }\r\n                      onChange={ this.onChange }\r\n                      onChangeConsumes={this.onChangeConsumesWrapper}\r\n                      specSelectors={ specSelectors }\r\n                      specActions={specActions}\r\n                      oas3Actions={oas3Actions}\r\n                      oas3Selectors={oas3Selectors}\r\n                      pathMethod={ pathMethod }\r\n                      isExecute={ isExecute }/>\r\n                  )).toArray()\r\n                }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        }\r\n        </div> : null }\r\n\r\n        {this.state.callbackVisible ? <div className=\"callbacks-container opblock-description-wrapper\">\r\n          <Callbacks\r\n            callbacks={Map(operation.get(\"callbacks\"))}\r\n            specPath={specPath.slice(0, -1).push(\"callbacks\")}\r\n          />\r\n        </div> : null }\r\n        {\r\n          isOAS3 && requestBody && this.state.parametersVisible &&\r\n          <div className=\"opblock-section opblock-section-request-body\">\r\n            <div className=\"opblock-section-header\">\r\n              <h4 className={`opblock-title parameter__name ${requestBody.get(\"required\") && \"required\"}`}>Request body</h4>\r\n              <label>\r\n                <ContentType\r\n                  value={oas3Selectors.requestContentType(...pathMethod)}\r\n                  contentTypes={ requestBody.get(\"content\", List()).keySeq() }\r\n                  onChange={(value) => {\r\n                    oas3Actions.setRequestContentType({ value, pathMethod });\r\n                    var requestBodyValue=oas3Selectors.requestBodyValue(...pathMethod);\r\n                    oas3Actions.setRequestBodyValue({ requestBodyValue, pathMethod });\r\n                    oas3Actions.initRequestBodyValidateError({ pathMethod })\r\n                  }}\r\n                  className=\"body-param-content-type\" />\r\n              </label>\r\n            </div>\r\n            <div className=\"opblock-description-wrapper\">\r\n              <RequestBody\r\n                specPath={specPath.slice(0, -1).push(\"requestBody\")}\r\n                requestBody={requestBody}\r\n                requestBodyValue={oas3Selectors.requestBodyValue(...pathMethod)}\r\n                requestBodyInclusionSetting={oas3Selectors.requestBodyInclusionSetting(...pathMethod)}\r\n                requestBodyErrors={oas3Selectors.requestBodyErrors(...pathMethod)}\r\n                isExecute={isExecute}\r\n                activeExamplesKey={oas3Selectors.activeExamplesMember(\r\n                  ...pathMethod,\r\n                  \"requestBody\",\r\n                  \"requestBody\" // RBs are currently not stored per-mediaType\r\n                )}\r\n                updateActiveExamplesKey={key => {\r\n                  this.props.oas3Actions.setActiveExamplesMember({\r\n                    name: key,\r\n                    pathMethod: this.props.pathMethod,\r\n                    contextType: \"requestBody\",\r\n                    contextName: \"requestBody\" // RBs are currently not stored per-mediaType\r\n                  })\r\n                }\r\n                }\r\n                onChange={(value, path) => {\r\n                  if(path) {\r\n                    const lastValue = oas3Selectors.requestBodyValue(...pathMethod)\r\n                    const usableValue = Map.isMap(lastValue) ? lastValue : Map()\r\n                    return oas3Actions.setRequestBodyValue({\r\n                      pathMethod,\r\n                      value: usableValue.setIn(path, value)\r\n                    })\r\n                  }\r\n                  oas3Actions.setRequestBodyValue({ value, pathMethod })\r\n                }}\r\n                onChangeIncludeEmpty={(name, value) => {\r\n                  oas3Actions.setRequestBodyInclusion({\r\n                    pathMethod,\r\n                    value,\r\n                    name,\r\n                  })\r\n                }}\r\n                contentType={oas3Selectors.requestContentType(...pathMethod)}/>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}"],"sourceRoot":""}